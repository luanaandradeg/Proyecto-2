#include <iostream>
#include <random>
#include <vector>
#include <ctime>
#include <list>

using namespace std;

class Cliente {
  unsigned tiempo;
  public:
  Cliente(){
    tiempo=rand()%13+3;
  };
  unsigned getTiempo();
};
unsigned Cliente::getTiempo(){
  return tiempo; 
}

class Banco {
  private:
    Cliente *clientes;
    unsigned cajeros[5]={0,0,0,0,0};
    unsigned numclientes;
    unsigned contador=0;
    unsigned tiempoxcajero[5]={0, 0, 0, 0, 0};
    unsigned tiempomax=0;
  public:
    Banco(Cliente *_clientes, unsigned _numclientes){
      clientes=_clientes;
      numclientes=_numclientes;
    };
    void simularAtencion();
    void getTiempoMax();
};

void Banco::simularAtencion(){
  while(contador<numclientes){
  for (unsigned i=0; i<5; i++){
    if (cajeros[i]==0){
      cajeros[i]=clientes[contador].getTiempo();
      cout <<"Cliente " <<contador+1 <<" a la caja " <<i+1 <<"\n";
      tiempoxcajero[i]+=cajeros[i];
      contador++;
      if (contador==numclientes)
        break;
    }
  }  
  for (unsigned i=0; i<5; i++)
    cajeros[i]--;
  }
  for (unsigned i=0; i<5; i++){
    if (tiempomax<tiempoxcajero[i])
      tiempomax=tiempoxcajero[i];
  }
}
void Banco::getTiempoMax(){
  cout <<"Se atendió a todos los clientes en " <<tiempomax <<" minutos.";
}

int main()
{
  unsigned numclientes;
  cin >>numclientes;
  Cliente clientes[numclientes];
  for (unsigned i=0; i<numclientes; i++)
    cout <<"Tiempo de atención cliente " <<i+1 <<": " <<clientes[i].getTiempo() <<"\n";
  Banco BCP(clientes, numclientes);
  BCP.simularAtencion();
  BCP.getTiempoMax();
  return 0;
}
